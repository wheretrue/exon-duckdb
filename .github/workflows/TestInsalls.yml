name: Test Installs

on:
  workflow_dispatch:
  pull_request:
  schedule:
  - cron: "0 0 * * *"

permissions:
  contents: read
  id-token: write

jobs:
  test-cli:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
    steps:
    - name: Install DuckDB on Mac
      if: matrix.os == 'macos-latest'
      run: |
        brew install duckdb
    - name: Install DuckDB on Linux
      if: matrix.os == 'ubuntu-latest'
      run: |
        sudo apt-get install wget unzip
        wget -O duckdb.zip https://github.com/duckdb/duckdb/releases/download/v0.8.0/duckdb_cli-linux-amd64.zip
        unzip duckdb.zip -d duckdb
        sudo mv duckdb/duckdb /usr/local/bin
    - name: Install DuckDB on Windows
      if: matrix.os == 'windows-latest'
      run: |
        choco install wget unzip
        wget -O duckdb.zip https://github.com/duckdb/duckdb/releases/download/v0.8.0/duckdb_cli-windows-amd64.zip
        unzip duckdb.zip
    - name: Create Script
      shell: bash
      run: |
        echo "SET custom_extension_repository='dbe.wheretrue.com/exon/latest';" > test.sql
        echo "INSTALL exon;" >> test.sql
        echo "LOAD exon;" >> test.sql
        echo "SELECT gc_content('ATCG');" >> test.sql
        cat test.sql
    - name: Run DuckDB (Unix)
      shell: bash
      if: matrix.os == 'macos-latest' || matrix.os == 'ubuntu-latest'
      run: |
        duckdb -unsigned < test.sql
    - name: Run DuckDB (Windows)
      shell: bash
      if: matrix.os == 'windows-latest'
      run: |
        ./duckdb.exe -unsigned < test.sql
