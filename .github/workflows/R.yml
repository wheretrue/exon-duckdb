name: Build R Package

on:
  push:
    tags:
      - "v*"

  workflow_dispatch:

permissions:
  contents: read
  id-token: write

jobs:
  build:
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [ubuntu-latest]
        # os: [ubuntu-latest, macos-latest, windows-latest]
        r: [4.2.2]

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set Up Env Vars for Prod
        if: startsWith(github.ref, 'refs/tags/v') && !contains(github.ref, 'dev')
        run: |
          echo "ENVIRONMENT=prd" >> $GITHUB_ENV
          echo "AWS_ACCOUNT_ID=894819748579" >> $GITHUB_ENV

      - name: Set Up Env Vars for Dev Override if Applicable
        if: startsWith(github.ref, 'refs/tags/v') && contains(github.ref, 'dev')
        run: |
          echo "ENVIRONMENT=dev" >> $GITHUB_ENV
          echo "AWS_ACCOUNT_ID=900163113876" >> $GITHUB_ENV

      - name: Set Up Env Vars for Dev Override if Applicable
        if: github.ref == 'refs/heads/main' || github.event_name == 'pull_request' && github.event.pull_request.base.ref == 'main'
        run: |
          echo "ENVIRONMENT=dev" >> $GITHUB_ENV
          echo "AWS_ACCOUNT_ID=900163113876" >> $GITHUB_ENV

      - name: Install System Deps
        run: |
          sudo apt-get update
          sudo apt-get update -y -qq && sudo apt-get install -y -qq ninja-build texlive-latex-base texlive-fonts-extra libcurl4-openssl-dev pandoc tidy

      - name: Set up R
        uses: r-lib/actions/setup-r@v2
        with:
          r-version: ${{ matrix.r }}
          http-user-agent: "GitHub Action"

      - name: Install dev tools
        run: |
          R -f ./wtt01r/dependencies.R

      - name: Build package
        run: R CMD build wtt01r

      - name: Create dist directory
        run: mkdir dist

      - name: Move package to dist directory
        run: mv *.tar.gz dist/
        if: success()

      - name: Upload package to artifacts
        uses: actions/upload-artifact@v2
        with:
          name: wtt01r-${{ matrix.os }}
          path: dist/*.tar.gz

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-region: us-west-2
          role-to-assume: arn:aws:iam::${{ env.AWS_ACCOUNT_ID }}:role/github-deploy-role

      - name: Setup Python
        uses: actions/setup-python@v2
        with:
          python-version: "3.9"

      - name: install boto3
        shell: bash
        run: |
          pip3 install boto3

      - name: Upload wheels to S3
        shell: bash
        run: aws s3 cp dist/*.tar.gz s3://wtt-01-dist-${{ env.ENVIRONMENT }}/R/

      - name: Copy rdist version tar.gz to a 'latest' version
        shell: bash
        run: |
          cd r-dist
          LATEST_VERSION=$(ls -t *.tar.gz | head -1)
          LATEST_VERSION=${LATEST_VERSION%.tar.gz}
          cp $LATEST_VERSION.tar.gz wtt01r_latest.tar.gz
          aws s3 cp wtt01r_latest.tar.gz s3://wtt-01-dist-${{ env.ENVIRONMENT }}/R/
