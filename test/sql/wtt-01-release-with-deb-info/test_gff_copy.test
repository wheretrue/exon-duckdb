statement ok
LOAD 'build/release/extension/exondb/exondb.duckdb_extension';

# Test writing to a GFF file
# query I
# COPY (SELECT * FROM read_gff('./test/sql/wtt-01-release-with-deb-info/test.gff')) TO './test/sql/tmp/test.gff' (FORMAT 'gff');
# ----
# 2

# Test reading that file returns the proper structure
# query IIIIIIIII
# SELECT * FROM read_gff('./test/sql/tmp/test.gff');
# ----
# sq0
# caat
# gene
# 8
# 13
# NULL
# +
# NULL
# gene_id=caat1;gene_name=gene0;
# sq1
# caat
# gene
# 8
# 14
# 0.1
# +
# 0
# gene_id=caat2;gene_name=gene0;

# Test writing to a GFF file, gzipped
# query I
# COPY (SELECT * FROM read_gff('./test/sql/wtt-01-release-with-deb-info/test.gff')) TO './test/sql/tmp/test.gff.gz' (FORMAT 'gff');
# ----
# 2

# Test writing to a GFF file, error because it exists
# statement error
# COPY (SELECT * FROM read_gff('./test/sql/wtt-01-release-with-deb-info/test.gff')) TO './test/sql/tmp/test.gff.gz' (FORMAT 'gff');

# Now try again, but set force true
# query I
# COPY (SELECT * FROM read_gff('./test/sql/wtt-01-release-with-deb-info/test.gff')) TO './test/sql/tmp/test.gff.gz' (FORMAT 'gff', FORCE true);
# ----
# 2

# Test writing to a GFF file, zstd
# query I
# COPY (SELECT * FROM read_gff('./test/sql/wtt-01-release-with-deb-info/test.gff')) TO './test/sql/tmp/test.gff.zst' (FORMAT 'gff');
# ----
# 2
